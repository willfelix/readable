{"ast":null,"code":"import * as api from '../utils/api';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nimport { getPosts } from './posts';\nexport var GET_COMMENTS = 'GET_COMMENTS';\nexport var VOTE_COMMENT = 'VOTE_COMMENT';\nexport var UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport var CREATE_COMMENT = 'CREATE_COMMENT';\nexport var DELETE_COMMENT = 'DELETE_COMMENT';\n\nvar deleteComment = function deleteComment(id) {\n  return {\n    type: DELETE_COMMENT,\n    id: id\n  };\n};\n\nvar createComment = function createComment(comment) {\n  return {\n    type: CREATE_COMMENT,\n    comment: comment\n  };\n};\n\nvar voteComment = function voteComment(vote, id) {\n  return {\n    type: VOTE_COMMENT,\n    id: id,\n    vote: vote\n  };\n};\n\nvar updateComment = function updateComment(comment) {\n  return {\n    type: UPDATE_COMMENT,\n    comment: comment\n  };\n};\n\nvar getComments = function getComments(id, comments) {\n  return {\n    type: GET_COMMENTS,\n    id: id,\n    comments: comments\n  };\n};\n\nexport function handleDeleteComment(id) {\n  return function (dispatch) {\n    dispatch(deleteComment(id));\n    return api.deleteComment(id);\n  };\n}\nexport function handleGetCommentsByPostId(id) {\n  return function (dispatch) {\n    return api.getCommentsByPostId(id).then(function (comments) {\n      return dispatch(getComments(id, comments));\n    });\n  };\n}\nexport function handleCreateComment(parentId, body, posts) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        authedUser = _getState.authedUser;\n\n    var timestamp = Date.now();\n    dispatch(showLoading());\n    return api.createComment({\n      id: timestamp.toString(),\n      timestamp: timestamp,\n      parentId: parentId,\n      body: body,\n      author: authedUser\n    }).then(function (comment) {\n      dispatch(createComment(comment));\n      dispatch(getPosts(posts));\n    }).then(function () {\n      return dispatch(hideLoading());\n    });\n  };\n}\nexport function handleVoteComment(vote, id) {\n  return function (dispatch) {\n    dispatch(voteComment(vote, id));\n    return api.voteComment(vote, id);\n  };\n}\nexport function handleUpdateComment(id, title, body) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    return api.updateComment({\n      id: id,\n      title: title,\n      body: body\n    }).then(function (post) {\n      return dispatch(updateComment(post));\n    }).then(function () {\n      return dispatch(hideLoading());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/src/actions/comments.js"],"names":["api","showLoading","hideLoading","getPosts","GET_COMMENTS","VOTE_COMMENT","UPDATE_COMMENT","CREATE_COMMENT","DELETE_COMMENT","deleteComment","id","type","createComment","comment","voteComment","vote","updateComment","getComments","comments","handleDeleteComment","dispatch","handleGetCommentsByPostId","getCommentsByPostId","then","handleCreateComment","parentId","body","posts","getState","authedUser","timestamp","Date","now","toString","author","handleVoteComment","handleUpdateComment","title","post"],"mappings":"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","sourcesContent":["import * as api from '../utils/api'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nimport { getPosts } from './posts'\n\nexport const GET_COMMENTS = 'GET_COMMENTS'\nexport const VOTE_COMMENT = 'VOTE_COMMENT'\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT'\nexport const CREATE_COMMENT = 'CREATE_COMMENT'\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\n\nconst deleteComment = (id) => ({\n\ttype: DELETE_COMMENT,\n\tid\n});\n\nconst createComment = (comment) => ({\n\ttype: CREATE_COMMENT,\n\tcomment\n});\n\nconst voteComment = (vote, id) => ({\n\ttype: VOTE_COMMENT,\n\tid,\n\tvote\n});\n\nconst updateComment = (comment) => ({\n\ttype: UPDATE_COMMENT,\n\tcomment\n});\n\nconst getComments = (id, comments) => ({\n\ttype: GET_COMMENTS,\n\tid,\n\tcomments\n});\n\nexport function handleDeleteComment (id) {\n\treturn (dispatch) => {\n\t\tdispatch( deleteComment(id) );\n\t\treturn api.deleteComment(id);\n\t}\n}\n\nexport function handleGetCommentsByPostId (id) {\n\treturn (dispatch) => {\n\t\treturn api.getCommentsByPostId(id)\n\t\t\t\t.then(comments => dispatch( getComments(id, comments) ))\n\t}\n}\n\nexport function handleCreateComment (parentId, body, posts) {\n\treturn (dispatch, getState) => {\n\t\tconst { authedUser } = getState()\n\t\tconst timestamp = Date.now();\n\n\t\tdispatch(showLoading())\n\n\t\treturn api.createComment({\n\t\t\tid: timestamp.toString(),\n\t\t\ttimestamp,\n\t\t\tparentId,\n\t\t\tbody,\n\t\t\tauthor: authedUser\n\t\t})\n\t\t.then(comment => {\n\t\t\tdispatch( createComment(comment) )\n\t\t\tdispatch( getPosts(posts) );\n\t\t})\n\t\t.then(() => dispatch( hideLoading() ))\n\t}\n}\n\nexport function handleVoteComment (vote, id) {\n\treturn (dispatch) => {\n\t\tdispatch( voteComment(vote, id) );\n\t\treturn api.voteComment(vote, id);\n\t}\n}\n\nexport function handleUpdateComment (id, title, body) {\n\treturn (dispatch) => {\n\n\t\tdispatch( showLoading() )\n\n\t\treturn api.updateComment({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tbody\n\t\t})\n\t\t.then(post => dispatch( updateComment(post) ))\n\t\t.then(() => dispatch( hideLoading() ))\n\t}\n}"]},"metadata":{},"sourceType":"module"}