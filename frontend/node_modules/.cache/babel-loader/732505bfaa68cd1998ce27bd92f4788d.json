{"ast":null,"code":"import * as api from '../utils/api';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nexport var GET_POST = 'GET_POST';\nexport var GET_POSTS = 'GET_POSTS';\nexport var SORT_POST = 'SORT_POST';\nexport var VOTE_POST = 'VOTE_POST';\nexport var CREATE_POST = 'CREATE_POST';\nexport var DELETE_POST = 'DELETE_POST';\nexport var UPDATE_POST = 'UPDATE_POST';\n\nvar votePost = function votePost(vote, id) {\n  return {\n    type: VOTE_POST,\n    id: id,\n    vote: vote\n  };\n};\n\nvar deletePost = function deletePost(id) {\n  return {\n    type: DELETE_POST,\n    id: id\n  };\n};\n\nvar updatePost = function updatePost(post) {\n  return {\n    type: UPDATE_POST,\n    post: post\n  };\n};\n\nvar createPost = function createPost(post) {\n  return {\n    type: CREATE_POST,\n    post: post\n  };\n};\n\nvar getPost = function getPost(post) {\n  return {\n    type: GET_POST,\n    post: post\n  };\n};\n\nexport var sortPosts = function sortPosts(sortBy) {\n  return {\n    type: SORT_POST,\n    sortBy: sortBy\n  };\n};\nexport var getPosts = function getPosts() {\n  var posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var sortBy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'timestamp';\n  return {\n    type: GET_POSTS,\n    posts: posts,\n    sortBy: sortBy\n  };\n};\nexport function handleGetPost(id) {\n  return function (dispatch) {\n    return api.getPost(id).then(function (post) {\n      return dispatch(getPost(post));\n    });\n  };\n}\nexport function handleVotePost(vote, id) {\n  return function (dispatch) {\n    dispatch(votePost(vote, id));\n    return api.votePost(vote, id);\n  };\n}\nexport function handleDeletePost(id) {\n  return function (dispatch) {\n    dispatch(deletePost(id));\n    return api.deletePost(id);\n  };\n}\nexport function handleCreatePost(title, body, category) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        authedUser = _getState.authedUser;\n\n    var timestamp = Date.now();\n    dispatch(showLoading());\n    return api.createPost({\n      id: timestamp.toString(),\n      timestamp: timestamp,\n      title: title,\n      body: body,\n      category: category,\n      author: authedUser\n    }).then(function (post) {\n      return dispatch(createPost(post));\n    }).then(function () {\n      return dispatch(hideLoading());\n    });\n  };\n}\nexport function handleUpdatePost(id, title, body) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    return api.updatePost({\n      id: id,\n      title: title,\n      body: body\n    }).then(function (post) {\n      return dispatch(updatePost(post));\n    }).then(function () {\n      return dispatch(hideLoading());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/src/actions/posts.js"],"names":["api","showLoading","hideLoading","GET_POST","GET_POSTS","SORT_POST","VOTE_POST","CREATE_POST","DELETE_POST","UPDATE_POST","votePost","vote","id","type","deletePost","updatePost","post","createPost","getPost","sortPosts","sortBy","getPosts","posts","handleGetPost","dispatch","then","handleVotePost","handleDeletePost","handleCreatePost","title","body","category","getState","authedUser","timestamp","Date","now","toString","author","handleUpdatePost"],"mappings":"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","sourcesContent":["import * as api from '../utils/api'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport const GET_POST = 'GET_POST'\nexport const GET_POSTS = 'GET_POSTS'\nexport const SORT_POST = 'SORT_POST'\nexport const VOTE_POST = 'VOTE_POST'\nexport const CREATE_POST = 'CREATE_POST'\nexport const DELETE_POST = 'DELETE_POST'\nexport const UPDATE_POST = 'UPDATE_POST'\n\nconst votePost = (vote, id) => ({\n\ttype: VOTE_POST,\n\tid,\n\tvote\n});\n\nconst deletePost = (id) => ({\n\ttype: DELETE_POST,\n\tid\n});\n\nconst updatePost = (post) => ({\n\ttype: UPDATE_POST,\n\tpost\n});\n\nconst createPost = (post) => ({\n\ttype: CREATE_POST,\n\tpost\n});\n\nconst getPost = (post) => ({\n\ttype: GET_POST,\n\tpost\n});\n\nexport const sortPosts = (sortBy) => ({\n\ttype: SORT_POST,\n\tsortBy\n});\n\nexport const getPosts = (posts = [], sortBy = 'timestamp') => ({\n\ttype: GET_POSTS,\n\tposts,\n\tsortBy\n});\n\nexport function handleGetPost (id) {\n\treturn (dispatch) => {\n\t\treturn api.getPost(id).then(post => dispatch( getPost(post) ));\n\t}\n}\n\nexport function handleVotePost (vote, id) {\n\treturn (dispatch) => {\n\t\tdispatch( votePost(vote, id) );\n\t\treturn api.votePost(vote, id);\n\t}\n}\n\nexport function handleDeletePost (id) {\n\treturn (dispatch) => {\n\t\tdispatch( deletePost(id) );\n\t\treturn api.deletePost(id);\n\t}\n}\n\nexport function handleCreatePost (title, body, category) {\n\treturn (dispatch, getState) => {\n\t\tconst { authedUser } = getState()\n\t\tconst timestamp = Date.now();\n\n\t\tdispatch(showLoading())\n\n\t\treturn api.createPost({\n\t\t\tid: timestamp.toString(),\n\t\t\ttimestamp,\n\t\t\ttitle,\n\t\t\tbody,\n\t\t\tcategory,\n\t\t\tauthor: authedUser\n\t\t})\n\t\t.then(post => dispatch( createPost(post) ))\n\t\t.then(() => dispatch( hideLoading() ))\n\t}\n}\n\nexport function handleUpdatePost (id, title, body) {\n\treturn (dispatch) => {\n\n\t\tdispatch( showLoading() )\n\n\t\treturn api.updatePost({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tbody\n\t\t})\n\t\t.then(post => dispatch( updatePost(post) ))\n\t\t.then(() => dispatch( hideLoading() ))\n\t}\n}"]},"metadata":{},"sourceType":"module"}