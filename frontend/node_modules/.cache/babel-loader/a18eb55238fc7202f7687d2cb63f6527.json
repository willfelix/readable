{"ast":null,"code":"import * as api from '../utils/api';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nexport var GET_POSTS = 'GET_POSTS';\nexport var VOTE_POST = 'VOTE_POST';\nexport var CREATE_POST = 'CREATE_POST';\nexport var DELETE_POST = 'DELETE_POST';\nexport var UPDATE_POST = 'UPDATE_POST';\n\nvar deletePost = function deletePost(id) {\n  return {\n    type: DELETE_POST,\n    id: id\n  };\n};\n\nvar updatePost = function updatePost(post) {\n  return {\n    type: UPDATE_POST,\n    post: post\n  };\n};\n\nvar createPost = function createPost(post) {\n  return {\n    type: CREATE_POST,\n    post: post\n  };\n};\n\nvar votePost = function votePost(vote, id) {\n  return {\n    type: VOTE_POST,\n    id: id,\n    vote: vote\n  };\n};\n\nexport var getPosts = function getPosts() {\n  var posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var sortBy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'timestamp';\n  return {\n    type: GET_POSTS,\n    posts: posts,\n    sortBy: sortBy\n  };\n};\nexport function handleVotePost(vote, id) {\n  return function (dispatch) {\n    dispatch(votePost(vote, id));\n    return api.votePost(vote, id);\n  };\n}\nexport function handleDeletePost(id) {\n  return function (dispatch) {\n    dispatch(deletePost(id));\n    return api.deletePost(id);\n  };\n}\nexport function handleCreatePost(title, body, category) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        authedUser = _getState.authedUser;\n\n    var timestamp = Date.now();\n    dispatch(showLoading());\n    return api.createPost({\n      id: timestamp.toString(),\n      timestamp: timestamp,\n      title: title,\n      body: body,\n      category: category,\n      author: authedUser\n    }).then(function (post) {\n      return dispatch(createPost(post));\n    }).then(function () {\n      return dispatch(hideLoading());\n    });\n  };\n}\nexport function handleUpdatePost(id, title, body) {\n  return function (dispatch) {\n    dispatch(showLoading());\n    return api.updatePost({\n      id: id,\n      title: title,\n      body: body\n    }).then(function (post) {\n      return dispatch(updatePost(post));\n    }).then(function () {\n      return dispatch(hideLoading());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/src/actions/posts.js"],"names":["api","showLoading","hideLoading","GET_POSTS","VOTE_POST","CREATE_POST","DELETE_POST","UPDATE_POST","deletePost","id","type","updatePost","post","createPost","votePost","vote","getPosts","posts","sortBy","handleVotePost","dispatch","handleDeletePost","handleCreatePost","title","body","category","getState","authedUser","timestamp","Date","now","toString","author","then","handleUpdatePost"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,cAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AAEA,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;;AAEP,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;AAAA,SAAS;AAC3BC,IAAAA,IAAI,EAAEJ,WADqB;AAE3BG,IAAAA,EAAE,EAAFA;AAF2B,GAAT;AAAA,CAAnB;;AAKA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAW;AAC7BF,IAAAA,IAAI,EAAEH,WADuB;AAE7BK,IAAAA,IAAI,EAAJA;AAF6B,GAAX;AAAA,CAAnB;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,IAAD;AAAA,SAAW;AAC7BF,IAAAA,IAAI,EAAEL,WADuB;AAE7BO,IAAAA,IAAI,EAAJA;AAF6B,GAAX;AAAA,CAAnB;;AAKA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAON,EAAP;AAAA,SAAe;AAC/BC,IAAAA,IAAI,EAAEN,SADyB;AAE/BK,IAAAA,EAAE,EAAFA,EAF+B;AAG/BM,IAAAA,IAAI,EAAJA;AAH+B,GAAf;AAAA,CAAjB;;AAMA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAACC,KAAD,uEAAS,EAAT;AAAA,MAAaC,MAAb,uEAAsB,WAAtB;AAAA,SAAuC;AAC9DR,IAAAA,IAAI,EAAEP,SADwD;AAE9Dc,IAAAA,KAAK,EAALA,KAF8D;AAG9DC,IAAAA,MAAM,EAANA;AAH8D,GAAvC;AAAA,CAAjB;AAMP,OAAO,SAASC,cAAT,CAAyBJ,IAAzB,EAA+BN,EAA/B,EAAmC;AACzC,SAAO,UAACW,QAAD,EAAc;AACpBA,IAAAA,QAAQ,CAAEN,QAAQ,CAACC,IAAD,EAAON,EAAP,CAAV,CAAR;AACA,WAAOT,GAAG,CAACc,QAAJ,CAAaC,IAAb,EAAmBN,EAAnB,CAAP;AACA,GAHD;AAIA;AAED,OAAO,SAASY,gBAAT,CAA2BZ,EAA3B,EAA+B;AACrC,SAAO,UAACW,QAAD,EAAc;AACpBA,IAAAA,QAAQ,CAAEZ,UAAU,CAACC,EAAD,CAAZ,CAAR;AACA,WAAOT,GAAG,CAACQ,UAAJ,CAAeC,EAAf,CAAP;AACA,GAHD;AAIA;AAED,OAAO,SAASa,gBAAT,CAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAkD;AACxD,SAAO,UAACL,QAAD,EAAWM,QAAX,EAAwB;AAAA,oBACPA,QAAQ,EADD;AAAA,QACtBC,UADsB,aACtBA,UADsB;;AAE9B,QAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AAEAV,IAAAA,QAAQ,CAACnB,WAAW,EAAZ,CAAR;AAEA,WAAOD,GAAG,CAACa,UAAJ,CAAe;AACrBJ,MAAAA,EAAE,EAAEmB,SAAS,CAACG,QAAV,EADiB;AAErBH,MAAAA,SAAS,EAATA,SAFqB;AAGrBL,MAAAA,KAAK,EAALA,KAHqB;AAIrBC,MAAAA,IAAI,EAAJA,IAJqB;AAKrBC,MAAAA,QAAQ,EAARA,QALqB;AAMrBO,MAAAA,MAAM,EAAEL;AANa,KAAf,EAQNM,IARM,CAQD,UAAArB,IAAI;AAAA,aAAIQ,QAAQ,CAAEP,UAAU,CAACD,IAAD,CAAZ,CAAZ;AAAA,KARH,EASNqB,IATM,CASD;AAAA,aAAMb,QAAQ,CAAClB,WAAW,EAAZ,CAAd;AAAA,KATC,CAAP;AAUA,GAhBD;AAiBA;AAED,OAAO,SAASgC,gBAAT,CAA2BzB,EAA3B,EAA+Bc,KAA/B,EAAsCC,IAAtC,EAA4C;AAClD,SAAO,UAACJ,QAAD,EAAc;AAEpBA,IAAAA,QAAQ,CAACnB,WAAW,EAAZ,CAAR;AAEA,WAAOD,GAAG,CAACW,UAAJ,CAAe;AACrBF,MAAAA,EAAE,EAAFA,EADqB;AAErBc,MAAAA,KAAK,EAALA,KAFqB;AAGrBC,MAAAA,IAAI,EAAJA;AAHqB,KAAf,EAKNS,IALM,CAKD,UAAArB,IAAI;AAAA,aAAIQ,QAAQ,CAAET,UAAU,CAACC,IAAD,CAAZ,CAAZ;AAAA,KALH,EAMNqB,IANM,CAMD;AAAA,aAAMb,QAAQ,CAAClB,WAAW,EAAZ,CAAd;AAAA,KANC,CAAP;AAOA,GAXD;AAYA","sourcesContent":["import * as api from '../utils/api'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport const GET_POSTS = 'GET_POSTS'\nexport const VOTE_POST = 'VOTE_POST'\nexport const CREATE_POST = 'CREATE_POST'\nexport const DELETE_POST = 'DELETE_POST'\nexport const UPDATE_POST = 'UPDATE_POST'\n\nconst deletePost = (id) => ({\n\ttype: DELETE_POST,\n\tid\n});\n\nconst updatePost = (post) => ({\n\ttype: UPDATE_POST,\n\tpost\n});\n\nconst createPost = (post) => ({\n\ttype: CREATE_POST,\n\tpost\n});\n\nconst votePost = (vote, id) => ({\n\ttype: VOTE_POST,\n\tid,\n\tvote\n});\n\nexport const getPosts = (posts = [], sortBy = 'timestamp') => ({\n\ttype: GET_POSTS,\n\tposts,\n\tsortBy\n});\n\nexport function handleVotePost (vote, id) {\n\treturn (dispatch) => {\n\t\tdispatch( votePost(vote, id) );\n\t\treturn api.votePost(vote, id);\n\t}\n}\n\nexport function handleDeletePost (id) {\n\treturn (dispatch) => {\n\t\tdispatch( deletePost(id) );\n\t\treturn api.deletePost(id);\n\t}\n}\n\nexport function handleCreatePost (title, body, category) {\n\treturn (dispatch, getState) => {\n\t\tconst { authedUser } = getState()\n\t\tconst timestamp = Date.now();\n\n\t\tdispatch(showLoading())\n\n\t\treturn api.createPost({\n\t\t\tid: timestamp.toString(),\n\t\t\ttimestamp,\n\t\t\ttitle,\n\t\t\tbody,\n\t\t\tcategory,\n\t\t\tauthor: authedUser\n\t\t})\n\t\t.then(post => dispatch( createPost(post) ))\n\t\t.then(() => dispatch(hideLoading()))\n\t}\n}\n\nexport function handleUpdatePost (id, title, body) {\n\treturn (dispatch) => {\n\n\t\tdispatch(showLoading())\n\n\t\treturn api.updatePost({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tbody\n\t\t})\n\t\t.then(post => dispatch( updatePost(post) ))\n\t\t.then(() => dispatch(hideLoading()))\n\t}\n}"]},"metadata":{},"sourceType":"module"}