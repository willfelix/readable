{"ast":null,"code":"import _classCallCheck from \"/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/src/pages/CommentFormPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { MdRemoveRedEye } from \"react-icons/md\";\nimport { handleUpdateComment } from '../actions/comments';\n\nvar CommentFormPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentFormPage, _Component);\n\n  function CommentFormPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentFormPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentFormPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      body: ''\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var body = _this.state.body;\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          id = _this$props.id,\n          category = _this$props.category,\n          post = _this$props.post;\n      dispatch(handleUpdateComment(id, body));\n\n      _this.setState(function () {\n        return {\n          body: ''\n        };\n      });\n\n      _this.props.history.push(\"/\".concat(category, \"/\").concat(post.id, \"/\").concat(id));\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentFormPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateState();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      this.updateState(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          comment = _this$props2.comment,\n          category = _this$props2.category,\n          post = _this$props2.post;\n      var body = this.state.body;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Updating comment #\", comment.id), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, post.title), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, category), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/\".concat(category, \"/\").concat(comment.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn-show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" \", React.createElement(MdRemoveRedEye, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \" \"))), React.createElement(\"form\", {\n        className: \"new-post\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        placeholder: \"Tell us more about this...\",\n        value: body,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            body: e.target.value\n          });\n        },\n        className: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        disabled: body === '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(props) {\n      var _ref = props || this.props,\n          post = _ref.post;\n\n      if (post) {\n        this.setState({\n          body: post.body\n        });\n      }\n    }\n  }]);\n\n  return CommentFormPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref2, props) {\n  var posts = _ref2.posts,\n      comments = _ref2.comments;\n  var _props$match$params = props.match.params,\n      comment = _props$match$params.comment,\n      post = _props$match$params.post,\n      category = _props$match$params.category;\n  return {\n    id: comment,\n    post: posts.find(function (p) {\n      return p.id === post;\n    }),\n    comment: comments.find(function (c) {\n      return c.id === comment;\n    }),\n    category: category\n  };\n};\n\nexport default connect(mapStateToProps)(CommentFormPage);","map":{"version":3,"sources":["/Users/willfelix/Documents/code/study/projects-udacity-nanodegree/readable/frontend/src/pages/CommentFormPage.js"],"names":["React","Component","connect","Link","MdRemoveRedEye","handleUpdateComment","CommentFormPage","state","body","handleSubmit","e","preventDefault","props","dispatch","id","category","post","setState","history","push","updateState","comment","title","target","value","mapStateToProps","posts","comments","match","params","find","p","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { MdRemoveRedEye } from \"react-icons/md\";\nimport { handleUpdateComment } from '../actions/comments'\n\nclass CommentFormPage extends Component {\n\t\n\tstate = { body: '' }\n\n\tcomponentDidMount() {\n\t\tthis.updateState();\n\t}\n\n\tcomponentWillReceiveProps (props) {\n\t\tthis.updateState(props);\n  \t}\n\n\trender() {\n\t\tconst { comment, category, post } = this.props;\n\t\tlet { body } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3 className='center'>Updating comment #{comment.id}</h3>\n\t\t\t\t<div>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<p>{post.title}</p>\n\t\t\t\t\t<small>{category}</small>\n\t\t\t\t\t<hr />\n\n\t\t\t\t\t<Link to={`/${category}/${comment.id}`}>\n\t\t\t\t\t\t<button className=\"btn-show\"> <MdRemoveRedEye /> </button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<form className='new-post' onSubmit={this.handleSubmit}>\n\t\t\t\t\t\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tplaceholder=\"Tell us more about this...\"\n\t\t\t\t\t\tvalue={body}\n\t\t\t\t\t\tonChange={ (e) => this.setState({ body: e.target.value }) }\n\t\t\t\t\t\tclassName='textarea' />\n\n\t\t\t\t\t<button className='btn' type='submit' disabled={body === ''}>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault()\n\n\t\tconst { body } = this.state\n\t\tconst { dispatch, id, category, post } = this.props\n\n\t\tdispatch( handleUpdateComment(id, body) );\n\n\t\tthis.setState(() => ({ body: '' }))\n\t\tthis.props.history.push(`/${category}/${post.id}/${id}`);\n\t}\n\n\tupdateState(props) {\n\t\tconst { post } = props || this.props;\n\t\tif (post) {\n\t\t\tthis.setState({ body: post.body, })\n\t\t}\n\t}\n\t\n}\n\nconst mapStateToProps = ({ posts, comments }, props) => {\n\tconst { comment, post, category } = props.match.params\n\n\treturn {\n\t\tid: comment,\n\t\tpost: posts.find(p => p.id === post),\n\t\tcomment: comments.find(c => c.id === comment),\n\t\tcategory\n\t}\n}\n\nexport default connect(mapStateToProps)(CommentFormPage);"]},"metadata":{},"sourceType":"module"}